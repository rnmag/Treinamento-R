anti_join(fp_quimica, by = "Nome")
fp_mun_petroleo <- read_excel("C:/Users/IBUREAU33/Downloads/FPQuímica_comparacao.xlsx",
sheet = 11) %>%
anti_join(fp_quimica, by = "Nome")
fp_trabalho <- read_excel("C:/Users/IBUREAU33/Downloads/FPQuímica_comparacao.xlsx",
sheet = 12) %>%
anti_join(fp_quimica, by = "Nome")
indicacoes_unificado <- rbind(fp_industria,
fp_livre_mercado) %>%
distinct(.keep_all = FALSE) %>%
arrange(Nome)
write.csv2(indicacoes_unificado, "indicacoes_2.csv")
sessionInfo()
sessionInfo()
sessionInfo()
sessionInfo()
sessionInfo()
sessionInfo()
2 + 2
10000 * 10000
2 + 2
x <- 2 + 2
x
y <- 3*1000
y
Nome <- "Rafael"
Nome
x <- "4"
x <- 5
x <- 5
a <- b <- c <- d <- 5
a
ls()
ls
a <- 5 * b
a
mean(c(1, 10))
Install.packages("swirl")
install.packages("swirl")
library("swirl")
library("swirl"
)
library("swirl"
))
library("swirl"
rm(list=ls())
install_course("R Programming")
swirl()
5+7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z,  555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0,  10)
c(1, 2, 3, 4) + (0, 10, 100)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 100
z * 2 + 1000
my_div
sessionInfo()
2 + 9 * 4
(2 + 9) * 4
4 + 3 / 10^2
pi - 3
pi
pi <- 3
pi
5 * 10^2
5 * 10^-2
111111 * 111111
1111111 * 1111111
a <- 4
a <- a * 5
a = 5
a
a <- 54
54 -> a
54 -> b
a <- 5
a <- a + 10
a
x <- y <- z <- w <- pi
rm(list = ls())
x <- y <- z <- w <- pi
numeros <- c(1, 4, 10, pi, 1/3)
numeros
numeros <- c(1, 4, 10, pi, 1/3, 4, 4, ,4 ,4 4, 4, 4)
numeros <- c(1, 4, 10, pi, 1/3, 4, 4, ,4 ,4, 4, 4, 4)
numeros <- c(1, 4, 10, pi, 1/3, 4, 4, 4,4 ,4, 4, 4, 4)
numeros
numeros <- c(1, 4, 10, pi, 1/3)
texto <- c("a", "b", "iBureau")
texto
teste <- c("21", "45")
mean(teste)
(tudo_junto <- c(numeros, texto))
tudo_junto <- c(numeros, texto)
(tudo_junto <- c(numeros, texto))
a <- 5
(a <- 5)
# ksjdblkasj caçkdj cçasdkj cçkasjdcnsdakj asc kjasdkjc
sessionInfo()
# ksjdblkasj caçkdj cçasdkj cçkasjdcnsdakj asc kjasdkjc
# d.kasflasjcasfd
# dfsadfasdfsa
# fdas
# fsadf
# asdfsadfasdf
sessionInfo()
a <- c(10, 20, 30)
b <- c(1, 2, 3, 4, 5, 6, 7, 8, 9)
a + b
a <- c(10, 20, 30, 15)
b <- c(1, 2, 3, 4, 5, 6, 7, 8, 9)
a + b
a
rep(1:5, 10)
sessionInfo
?rep
install.packages("swirl")
library(swirl)
sessionIfo
sessionInfo
(35 + 65)/2
mean(1:1000)
mean(c(1, 1000))
mean(c(10, 20))
mean(10:20)
mean(c(1, 2, 3))
mean(1:3)
library(xml2)
install.packages(c("xml2", "rvest", "dplyr", "stringr", "glue", "htmltools"))
install.packages(c("xml2", "rvest", "dplyr", "stringr", "glue", "htmltools"))
library(xml2)
library(rvest)
library(dplyr)
library(stringr)
library(glue)
library(htmltools)
# Criação de fichas individuais ----
ficha <- function(nome = NULL, area = NULL, num_partido = NULL,
b_eleitoral = NULL, legis = NULL,
webpage = TRUE){
nome <- str_replace_all(nome, " ", replacement = "+") %>%
stringi::stri_trans_general("Latin-ASCII")
base <- "https://www.al.sp.gov.br/alesp/deputados-estaduais/?"
nm <- paste0("filtroNome=", nome)
ar <- paste0("&filtroAreaAtuacao=", area)
be <- paste0("&filtroBaseEleitoral=", b_eleitoral)
pt <- paste0("&filtroPartido=", num_partido)
lg <- paste0("&filtroLegislatura=", legis)
other <- "&filtroEmExercicio=on&filtroEmExercicioPesquisa=S&filtroLegislaturaAtual=S"
url <- paste0(base, nm, ar, be, pt, lg, other)
df <- read_html(url) %>%
html_table() %>%
.[[2]] %>%
as_tibble() %>%
mutate(`Área de Atuação` = gsub("([a-z])([A-Z])", "\\1 \\2",
`Área de Atuação`),
`Base Eleitoral` =  gsub("([a-z])([A-Z])", "\\1 \\2",
`Base Eleitoral`)) %>%
mutate_at(1:3, stringi::stri_trans_general, "Latin-ASCII")
colnames(df) <- stringi::stri_trans_general(colnames(df), "Latin-ASCII")
if (!is.null(legis) | !interactive()) {
if (legis < 15) webpage <- FALSE
}
url <- paste0(base, "filtroNome=", nome, "&filtroAreaAtuacao=&filtroBaseEleitoral=&filtroPartido=", num_partido, "&filtroLegislatura=", legis, "&filtroEmExercicio=on&filtroEmExercicioPesquisa=&filtroLegislaturaAtual=S")
read_html(url) %>%
html_node(css = "#conteudo > div.row > div.col-lg-9 > form > table.tabela > tbody > tr > td:nth-child(1) > a") %>%
html_attr("href") -> href
weburl <- paste0("https://www.al.sp.gov.br", href)
dep <- read_html(weburl)
bio <- dep %>%
html_nodes("p") %>%
`[[`(2) %>%
html_text() %>%
str_remove_all("\\r") %>% str_remove_all("\\n") %>%
str_remove_all("\\t") %>%
str_trim()
foto <- dep %>%
html_node(".img-thumbnail") %>%
html_attr("src")
info <- function(path){
x <- dep %>%
html_nodes(xpath = path) %>%
html_attr("value")
}
nome <- dep %>% html_node(xpath = '//*[@id="conteudo"]/div[1]/div[1]/h2') %>%
html_text()
partido <- html_nodes(dep, ".form-control-sm")[2] %>% html_text() %>% str_trim()
base_eleitoral <- html_nodes(dep, ".form-control-sm")[3] %>% html_text() %>% str_trim()
area_atuacao <- html_nodes(dep, ".form-control-sm")[4] %>% html_text() %>% str_trim()
fax <- info('//*[@id="infoGeral"]/div[3]/div[1]/input')
telefone <- info('//*[@id="infoGeral"]/div[3]/div[2]/input')
sala_andar <- info('//*[@id="infoGeral"]/div[3]/div[3]/input')
veiculo <- info('//*[@id="infoGeral"]/div[3]/div[4]/input')
email <- info('//*[@id="infoGeral"]/div[4]/div[1]/input')
niver <- info('//*[@id="infoGeral"]/div[4]/div[2]/input')
if (webpage == TRUE) {
glue::glue('<p>
<img src={foto} style="width:15%;height:15%;">
<br>
<a href={foto}>Alta resolução</a>
<br>
<br>
<b>Nome:</b> {nome}
<br>
<b>Partido:</b> {partido}
<br>
<b>Base Eleitoral:</b> {base_eleitoral}
<br>
<b>Área de Atuação:</b> {area_atuacao}
<br>
<div><b>Telefone:</b> {telefone}</div>
<div><b>E-mail:</b> {email}</div>
<div><b>Aniversário:</b> {niver}</div>
<br>
<b>Bio:</b> {bio}
</p>') %>%
htmltools::HTML() %>%
htmltools::html_print()
}
df <- cbind(df, telefone, email, niver, bio, foto) %>%
rename(deputado = Deputado,
area_atuacao = `Area de Atuacao`,
base_eleitoral = `Base Eleitoral`,
partido = Partido)
return(df)
}
# Exemplos ----
# Ficha de um deputado
ficha("Beth Sahão", legis = 19)
numeros <- 1:1000
numeros
numeros_desc <- 1000:1
numeros_desc
?seq
impares <- seq(from = 1, to = 1000, by = 2)
impares
mean(impares)
teste2 <- seq(from = 1, to = 1000, by = 10)
teste2
teste2 <- seq(from = 0, to = 1000, by = 10)
teste2
?seq
mean(impares)
sd(impares)
range(impares)
IQR(impares)
summary(impares)
t <- NA
typeof(impares)
1/0
nomes <- c("Rafael", "Isllane", "Ana", "Pedro")
nomes
formacao <- c("Ciência Política", "GPP", "Adm Publica", "GPP")
nomes <- c("Rafael", "Isllane", "Ana", "Pedro")
formacao <- c("Ciência Política", "GPP", "Adm Publica", "GPP")
mpo_empresa <- c(3, 10, 10, 1)
equipe_acp <- data.frame(nomes, formacao, tempo_empresa)
tempo_empresa <- c(3, 10, 10, 1)
equipe_acp <- data.frame(nomes, formacao, tempo_empresa)
equipe_acp
View(equipe_acp)
nomes <- c("Rafael", "Isllane", "Ana", "Pedrão")
equipe_acp <- data.frame(nomes, formacao, tempo_empresa)
nrow(equipe_acp)
ncol(equipe_acp)
head(equipe_acp)
?head
head(equipe_acp, 2)
summary(equipe_acp)
impares[287]
impares(seq(1, 1000, 2))
impares <- seq(1, 1000, 2))
impares <- seq(1, 1000, 2)
impares
impares[287]
impares[c(1, 76, 48)] # seleção de diversos números
impares[-c(1:250)] # todos os números menos os 250 primeiros
impares[impares > 900] # apenas valores maiores que 900
View(equipe_acp)
equipe_acp[1, 3]
equipe_acp[2, 2]
equipe_acp[1,] # retorna toda a linha 1
equipe_acp[,3] # retorna toda a coluna 3
equipe_acp[,c(1, 3)] # retorna as colunas 1 e 3
equipe_acp[c(1, 3),] # retorna as colunas 1 e 3
equipe_acp$tempo_empresa
equipe_acp[,3] # mesmo resultado
equipe_acp$nomes
install.packages("googlesheets")
library(googlesheets)
library(dplyr)
gs_ls()
gs_ls()
gs_auth()
gs_auth(new_user = TRUE)
gs_ls()
?gs_read
gs_url
?gs_url
braskem <- gs_url("https://docs.google.com/spreadsheets/d/1Vac79cKMJo7l6LCeN1LODJq1FC1ymAUoi-xjSubP1cE/edit#gid=29415472")
View(braskem)
braskem <- gs_url(link_planilha, ws = "Comissões")
library(googlesheets)
library(dplyr)
braskem <- gs_url(link_planilha) %>%
gs_read(ws = "Comissões")
# Link da planilha
link_planilha <- "https://docs.google.com/spreadsheets/d/1Vac79cKMJo7l6LCeN1LODJq1FC1ymAUoi-xjSubP1cE/edit#gid=29415472"
braskem <- gs_url(link_planilha) %>%
gs_read(ws = "Comissões")
View(braskem)
?gs_read
fpquimica <- braskem %>%
gs_read(ws = "FPQuímica")
financ_campanha <- braskem %>%
gs_read(ws = "Financiamento de Campanha")
comissoes <- braskem %>%
gs_read(ws = "Comissões")
grau_influencia <- braskem %>%
gs_read(ws = "Grau de Influência")
base_eleitoral_e <- braskem %>%
gs_read(ws = "Base Eleitoral (E)")
base_eleitoral_ou <- braskem %>%
gs_read(ws = "Base Eleitoral (E/OU)")
engajamento <- braskem %>%
gs_read(ws = "Engajamento")
votacoes <- braskem %>%
gs_read(ws = "Votações")
indicacoes <- braskem %>%
gs_read(ws = "Indicações")
# Baixar todos os dados de todas as planilhas
braskem <- gs_url("https://docs.google.com/spreadsheets/d/1Vac79cKMJo7l6LCeN1LODJq1FC1ymAUoi-xjSubP1cE/edit#gid=29415472")
# Baixar todos os dados de todas as planilhas
braskem <- gs_url("https://docs.google.com/spreadsheets/d/1Vac79cKMJo7l6LCeN1LODJq1FC1ymAUoi-xjSubP1cE/edit#gid=29415472")
# Um objeto para cada planilha
fpquimica <- braskem %>%
gs_read(ws = "FPQuímica")
financ_campanha <- braskem %>%
gs_read(ws = "Financiamento de Campanha")
comissoes <- braskem %>%
gs_read(ws = "Comissões")
grau_influencia <- braskem %>%
gs_read(ws = "Grau de Influência")
base_eleitoral_e <- braskem %>%
gs_read(ws = "Base Eleitoral (E)")
base_eleitoral_ou <- braskem %>%
gs_read(ws = "Base Eleitoral (E/OU)")
engajamento <- braskem %>%
gs_read(ws = "Engajamento")
votacoes <- braskem %>%
gs_read(ws = "Votações")
votacoes <- braskem %>%
gs_read(ws = "Votações")
indicacoes <- braskem %>%
gs_read(ws = "Indicações")
names(fpquimica)
# Um objeto para cada planilha
fpquimica <- braskem %>%
gs_read(ws = "FPQuímica") %>%
count(Nome)
View(fpquimica)
View(fpquimica)
?count
# Um objeto para cada planilha
fpquimica <- braskem %>%
gs_read(ws = "FPQuímica") %>%
count(Nome, name = "Peso")
View(fpquimica)
# Baixar todos os dados de todas as planilhas
braskem <- gs_url("https://docs.google.com/spreadsheets/d/1Vac79cKMJo7l6LCeN1LODJq1FC1ymAUoi-xjSubP1cE/edit#gid=29415472")
# Um objeto para cada planilha
financ_campanha <- braskem %>%
gs_read(ws = "Financiamento de Campanha") %>%
count(Nome, name = "Peso")
comissoes <- braskem %>%
gs_read(ws = "Comissões") %>%
count(Nome, name = "Peso")
grau_influencia <- braskem %>%
gs_read(ws = "Grau de Influência") %>%
count(Nome, name = "Peso")
base_eleitoral_ou <- braskem %>%
gs_read(ws = "Base Eleitoral (E/OU)") %>%
count(Nome, name = "Peso")
engajamento <- braskem %>%
gs_read(ws = "Engajamento") %>%
count(Nome, name = "Peso")
votacoes <- braskem %>%
gs_read(ws = "Votações") %>%
count(Nome, name = "Peso")
financ_campanha
comissoes
grau_influencia
base_eleitoral_ou
engajamento
votacoes
engajamento <- braskem %>%
gs_read(ws = "Engajamento") %>%
count(Nome, name = "Peso") %>%
mutate(Peso = Peso * 3)
engajamento
# Baixar todos os dados de todas as planilhas
braskem <- gs_url("https://docs.google.com/spreadsheets/d/1Vac79cKMJo7l6LCeN1LODJq1FC1ymAUoi-xjSubP1cE/edit#gid=29415472")
# Um objeto para cada planilha
financ_campanha <- braskem %>%
gs_read(ws = "Financiamento de Campanha") %>%
count(Nome, name = "Pontos") # %>% mutate(Pontos = Pontos * 3)
comissoes <- braskem %>%
gs_read(ws = "Comissões") %>%
count(Nome, name = "Pontos") # %>% mutate(Pontos = Pontos * 3)
grau_influencia <- braskem %>%
gs_read(ws = "Grau de Influência") %>%
count(Nome, name = "Pontos") # %>% mutate(Pontos = Pontos * 3)
base_eleitoral_ou <- braskem %>%
gs_read(ws = "Base Eleitoral (E/OU)") %>%
count(Nome, name = "Pontos") # %>% mutate(Pontos = Pontos * 3)
engajamento <- braskem %>%
gs_read(ws = "Engajamento") %>%
count(Nome, name = "Pontos") # %>% mutate(Pontos = Pontos * 3)
votacoes <- braskem %>%
gs_read(ws = "Votações") %>%
count(Nome, name = "Pontos") # %>% mutate(Pontos = Pontos * 3)
votacoes <- braskem %>%
gs_read(ws = "Votações") %>%
count(Nome, name = "Pontos") # %>% mutate(Pontos = Pontos * 3)
# Juntando todos os critérios
contagem <- bind_rows(financ_campanha,
comissoes,
grau_influencia,
base_eleitoral_ou,
engajamento,
votacoes) %>%
group_by(Nome) %>%
count(Pontos)
conatagem
contagem
?arrange
desc(1:10)
# Juntando todos os critérios
contagem <- bind_rows(financ_campanha,
comissoes,
grau_influencia,
base_eleitoral_ou,
engajamento,
votacoes) %>%
group_by(Nome) %>%
count(Pontos) %>%
arrange(desc(Pontos))
contagem
# Juntando todos os critérios
contagem <- bind_rows(financ_campanha,
comissoes,
grau_influencia,
base_eleitoral_ou,
engajamento,
votacoes) %>%
group_by(Nome) %>%
summarise(Pontos = sum(Pontos)) %>%
arrange(desc(Pontos))
contagem
library(swirl)
swirl()
x <- seq(1, 100, 2)
x[3]
x
x <- seq(from = 1, by = 2, to = 100)
x
nomes <- c("Rafael", "Isllane", "Ana", "Pedro")
formacao <- c("Ciência Política", "GPP", "Adm Publica", "GPP")
tempo_empresa <- c(3, 10, 10, 1)
equipe_acp <- data.frame(nomes, formacao, tempo_empresa)
View(equipe_acp)
formacao_isllane <- equipe_acp[2, 2]
formacao_ana <- equipe_acp[3, 2]
formacao_ana
equipe_acp[4,]
equipe_acp[,2]
equipe_acp[c(1, 3), 2]
equipe_acp[c(2, 4), 2]
equipe_acp[-1, 2]
equipe_acp[equipe_acp$tempo_empresa > 2 & equipe_acp$tempo_empresa < 5,]
cadeiras <- c(55, 54, 38, 35, 34, 33, 32, 31, 30, 28, 27, 13, 11, 10, 10, 10, 8, 8, 8, 8, 7, 6, 5, 4, 3, 2, 1, 1, 1)
cadeiras
prop_cadeiras <- cadeiras / sum(cadeiras)
prop_cadeiras
prop_cadeiras <- cadeiras / sum(cadeiras) # proporções de cadeiras por partido
prop_cadeiras_quad <- prop_cadeiras^2
NEP <- 1 / sum(prop_cadeiras_quad)
NEP
1 / sum((cadeiras / sum(cadeiras))^2)
nota_bolsonaro <- c(7, 10, 2, 3, 6, 5, 7, 1, 5, 6)
mean(nota_bolsonaro)
median(nota_bolsonaro)
var(nota_bolsonaro)
sd(nota_bolsonaro)
summary(nota_bolsonaro)
setwd("//192.168.15.10/conjuntura politica/Treinamento-R/2019-2/4. Versionamento (cont.), Estat Descritiva e Importação")
library(readr)
bd <- read_delim("BD_CIS0539.csv", ";")
View(bd)
table(bd$PARTIDO)
